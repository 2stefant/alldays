import { alldays, isoDayFormat } from "../index";
import moment from "moment";

test("alldays, 7 = sundays whole year 2020.", () => {
    //Arrange
    let expected = new Set(allSundays2020());
    //Act
    let days = new Set(alldays(7, "2020-01-01"));
    //Assert
    expect(days).toEqual(expected);
});

const allSundays2020 = (): string[] => {
    return ["2020-01-05", "2020-01-12", "2020-01-19", "2020-01-26", "2020-02-02",
        "2020-02-09", "2020-02-16", "2020-02-23", "2020-03-01", "2020-03-08",
        "2020-03-15", "2020-03-22", "2020-03-29", "2020-04-05", "2020-04-12",
        "2020-04-19", "2020-04-26", "2020-05-03", "2020-05-10", "2020-05-17",
        "2020-05-24", "2020-05-31", "2020-06-07", "2020-06-14", "2020-06-21",
        "2020-06-28", "2020-07-05", "2020-07-12", "2020-07-19", "2020-07-26",
        "2020-08-02", "2020-08-09", "2020-08-16", "2020-08-23", "2020-08-30",
        "2020-09-06", "2020-09-13", "2020-09-20", "2020-09-27", "2020-10-04",
        "2020-10-11", "2020-10-18", "2020-10-25", "2020-11-01", "2020-11-08",
        "2020-11-15", "2020-11-22", "2020-11-29", "2020-12-06",
        "2020-12-13", "2020-12-20", "2020-12-27"];
}

test("alldays, 4 = thursdays whole year 2020.", () => {
    //Arrange
    let expected = new Set(allThursdays2020());
    //Act
    let days = new Set(alldays(4, "2020-01-01"));
    //Assert
    expect(days).toEqual(expected);
});

const allThursdays2020 = (): string[] => {
    return ["2020-01-02", "2020-01-09", "2020-01-16", "2020-01-23", "2020-01-30",
        "2020-02-06", "2020-02-13", "2020-02-20", "2020-02-27", "2020-03-05",
        "2020-03-12", "2020-03-19", "2020-03-26", "2020-04-02", "2020-04-09",
        "2020-04-16", "2020-04-23", "2020-04-30", "2020-05-07", "2020-05-14",
        "2020-05-21", "2020-05-28", "2020-06-04", "2020-06-11", "2020-06-18",
        "2020-06-25", "2020-07-02", "2020-07-09", "2020-07-16", "2020-07-23",
        "2020-07-30", "2020-08-06", "2020-08-13", "2020-08-20", "2020-08-27",
        "2020-09-03", "2020-09-10", "2020-09-17", "2020-09-24", "2020-10-01",
        "2020-10-08", "2020-10-15", "2020-10-22", "2020-10-29", "2020-11-05",
        "2020-11-12", "2020-11-19", "2020-11-26", "2020-12-03", "2020-12-10",
        "2020-12-17", "2020-12-24", "2020-12-31"];
}

//Learns about moment api.
test("firstDayCurrentYear", () => {
    //Arrange
    let actual = "2020-08-08";
    let expected = "2020-01-01";
    //Act
    let day = moment(actual).startOf("year");
    //Assert
    expect(day.format(isoDayFormat)).toEqual(expected);
});

//Learns about moment api.
test("lastDayCurrentYear", () => {
    //Arrange
    let actual = "2020-08-08";
    let expected = "2020-12-31";
    //Act
    let day = moment(actual).endOf("year");
    //Assert
    expect(day.format(isoDayFormat)).toEqual(expected);
});